/* Home-Row Mods */
ZMK_HOLD_TAP(hml,
    flavor="balanced";
    tapping-term-ms=<280>;
    quick-tap-ms=<175>;
    require-prior-idle-ms=<150>;
    bindings=<&kp>,<&kp>;
    hold-trigger-key-positions = <KEYS_R THUMBS_L THUMBS_R>;
    hold-trigger-on-release;
)

ZMK_HOLD_TAP(hmr,
    flavor="balanced";
    tapping-term-ms=<280>;
    quick-tap-ms=<175>;
    require-prior-idle-ms=<150>;
    bindings=<&kp>,<&kp>;
    hold-trigger-key-positions = <KEYS_L THUMBS_L THUMBS_R>;
    hold-trigger-on-release;
)
/* ------------- */

/* One-Shot Mods */
ZMK_STICKY_KEY(osm_sk,
    release-after-ms=<3000>;
    bindings=<&kp>;
    quick-release;
    lazy;
    ignore-modifiers;
)

ZMK_HOLD_TAP(osm,
    flavor="balanced";
    tapping-term-ms=<280>;
    bindings=<&kp>,<&osm_sk>;
    hold-while-undecided-linger;
)

#define OSM(keycode) &osm keycode keycode
/* ------------- */

/*
Window Swapper

Call this macro before using the &win_swap behavior to specify 
the position of the key that triggers the previous window.
*/
#define WIN_SWAP(ignored_key_positions) \
    ZMK_TRI_STATE(win_swap, \
        bindings=<&kt LGUI>,<&kp TAB>,<&kt LGUI>; \
        ignored-key-positions=<ignored_key_positions>; \
    )
/* ------------- */


/*
Tab Swapper

Call this macro before using the &tab_swap behavior to specify
the position of the key that triggers the previous tab.
*/
#define TAB_SWAP(ignored_key_positions) \
    ZMK_TRI_STATE(tab_swap, \
        bindings=<&kt LCTRL>,<&kp TAB>,<&kt LCTRL>; \
        ignored-key-positions=<ignored_key_positions>; \
    )
/* ------------- */

/*
Smart Mouse Layer

Call this macro before using the &mouse behavior to specify
the position of the key that triggers the mouse layer and positions that have mouse keys.
*/
#define MOUSE_LAYER(ignored_key_positions) \
    ZMK_TRI_STATE(mouse, \
        bindings=<&tog MOUSE>,<&none>,<&tog MOUSE>; \
        ignored-key-positions=<ignored_key_positions>; \
        ignored-layers=<MOUSE>; \
    )
/* ------------- */

/* Auto Shift */
ZMK_HOLD_TAP(as,
    flavor="tap-preferred";
    tapping-term-ms=<180>;
    bindings=<&kp>,<&kp>;
)

#define AS_1(keycode) &as LS(keycode) keycode
#define AS_2(keycode1, keycode2) &as keycode1 keycode2
/* ------------- */