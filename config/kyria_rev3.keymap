#include <behaviors.dtsi>
#include <behaviors/num_word.dtsi>
#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

/* Layer Definitions */
#define ALP 0
#define SYM 1
#define NAV 2
#define NUM 3
#define MOUSE 4
#define ALL ALP SYM NAV NUM MOUSE
#define ALL_NO_MOUSE ALP SYM NAV NUM
/* ---------------- */

#include "zmk-helpers/helper.h"
#include "includes/key-labels.h"
#include "includes/behaviors.dtsi"  // Requires key-labels.
#include "includes/combos.dtsi"     // Requires behaviors.

#define XXX &none
#define ___ &trans
#define AS_COMMA AS_2(SEMI, COMMA)
#define AS_DOT AS_2(COLON, DOT)
#define AS_EXCL AS_2(QMARK, EXCL)
#define AS_QUOTE AS_2(DQT, SQT)

/* Global Overrides */
&lt {
    flavor = "balanced";
    quick-tap-ms=<175>;
    tapping-term-ms=<200>;
};

#undef ZMK_MOUSE_DEFAULT_MOVE_VAL // 600
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 2000  
#undef ZMK_MOUSE_DEFAULT_SCRL_VAL // 10
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 25

&mmv {
    acceleration-exponent = <1>;      // 1
    time-to-max-speed-ms = <800>;     // 300
};

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <500>;     // 300
};
/* ---------------- */

ZMK_CONDITIONAL_LAYER(num, SYM NAV, NUM)

ZMK_LAYER(alp,
//  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                                                          ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
      XXX           XXX           AS_1(Q)       AS_1(M)       AS_1(W)       AS_1(Z)                                                                  AS_QUOTE      AS_1(F)       AS_1(O)       AS_1(U)       XXX           XXX
//  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                          ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
      AS_1(X)       AS_1(N)       AS_1(R)       AS_1(T)       AS_1(S)       AS_1(G)                                                                  AS_1(Y)       AS_1(H)       AS_1(A)       AS_1(E)       AS_1(I)       AS_1(J)
//  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┬─────────────╮  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤
      XXX           AS_1(B)       AS_1(L)       AS_1(D)       AS_1(C)       AS_1(V)       XXX           XXX              XXX           XXX           AS_1(K)       AS_1(P)       AS_COMMA      AS_DOT        AS_EXCL       XXX       
//  ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┼─────────────┬─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                XXX           XXX          &lt NAV SPACE  XXX           XXX              XXX           XXX          &lt SYM SPACE   XXX          XXX           
//                                            ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(sym,
//  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                                                          ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
      ___           ___           &kp LBRC      &kp LPAR      &kp LBKT      ___                                                                      ___           &kp RBRC      &kp RPAR      &kp RBKT      ___           ___
//  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                          ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
      &kp CARET     &kp PLUS      &kp MINUS     &kp EQUAL     &kp UNDER     &kp AMPS                                                                 &kp PRCNT     OSM(LGUI)     OSM(LALT)     OSM(LCTRL)    OSM(LSHFT)    &kp DLLR
//  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┬─────────────╮  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤
      ___           &kp LT        &kp FSLH      &kp ASTRK     &kp GRAVE     &kp TILDE     ___           ___              ___           ___           &kp PIPE      &kp AT        &kp HASH      &kp BSLH      &kp GT        ___       
//  ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┼─────────────┬─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                ___           ___          &lt NAV SPACE  ___           ___              ___           ___          &lt SYM SPACE  ___           ___          
//                                            ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(nav,
//  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                                                          ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
      ___           ___           ___           ___           ___           ___                                                                      ___           ___           ___           ___           ___           ___
//  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                          ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
      ___           OSM(LSHFT)    OSM(LCTRL)    OSM(LALT)     OSM(LGUI)    ___                                                                      ___           ___           &kp UP        ___           ___           ___
//  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┬─────────────╮  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤
      ___           ___           ___           ___           ___           ___           ___           ___              ___           ___           ___           &kp LEFT      &kp DOWN      &kp RIGHT     ___           ___       
//  ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┼─────────────┬─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                ___           ___          &lt NAV SPACE  ___           ___              ___           ___          &lt SYM SPACE  ___           ___          
//                                            ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(num,
//  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                                                          ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
      ___           ___           &kp LBRC      &kp LPAR      &kp LBKT      ___                                                                      ___           &kp KP_N7     &kp KP_N8     &kp KP_N9     ___           ___
//  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                          ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
      &kp CARET     &kp PLUS      &kp MINUS     &kp EQUAL     &kp UNDER     &kp AMPS                                                                 &kp PRCNT     &kp KP_N4     &kp KP_N5     &kp KP_N6     AS_COMMA      &kp DLLR
//  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┬─────────────╮  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤
      ___           &kp LT        &kp FSLH      &kp ASTRK     &kp GRAVE     &kp TILDE     ___           ___              ___           ___           AS_DOT        &kp KP_N1     &kp KP_N2     &kp KP_N3     &kp GT        ___       
//  ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┼─────────────┬─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                ___           ___          &lt NAV SPACE  ___           ___              ___           ___           &kp KP_N0      ___           ___          
//                                            ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
)

ZMK_LAYER(mouse,
//  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                                                          ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
      ___           ___           ___           ___           ___           ___                                                                      ___           ___           ___           ___           ___           ___
//  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                                          ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
      ___           ___           ___           ___           ___           ___                                                                      ___           ___           &mmv MOVE_UP  ___           ___           ___
//  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┬─────────────╮  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────┤
      ___           ___           ___           ___           ___           ___           ___           ___              ___           ___           ___        &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT ___           ___       
//  ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┼─────────────┬─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                ___           ___           ___           ___           ___              ___           ___           ___           ___           ___          
//                                            ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
)